<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learnpgs on Edidor Demo</title>
    <link>https://mjczz.github.io/learnpg/</link>
    <description>Recent content in Learnpgs on Edidor Demo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 06 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mjczz.github.io/learnpg/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>EXPLAIN 使用浅析</title>
      <link>https://mjczz.github.io/learnpg/explain-%E4%BD%BF%E7%94%A8%E6%B5%85%E6%9E%90/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mjczz.github.io/learnpg/explain-%E4%BD%BF%E7%94%A8%E6%B5%85%E6%9E%90/</guid>
      <description>EXPLAIN 语法 在PostgreSQL 中，EXPLAIN 命令可以输出SQL 语句的查询计划，具体语法如下： EXPLAIN [ ( option [, ...] ) ] statement EXPLAIN [ ANALYZE ] [ VERBOSE ] statement where option can be one of:</description>
    </item>
    
    <item>
      <title>pgsql优化1</title>
      <link>https://mjczz.github.io/learnpg/1/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mjczz.github.io/learnpg/1/</guid>
      <description>1. 创建必要的索引,如何其他表关联的字段 2. 调整where子句的顺序：pgsql从左向右解析where子句 3. SELECT 语句中避免用户 *，即使是查询所有的</description>
    </item>
    
    <item>
      <title>pgsql优化2</title>
      <link>https://mjczz.github.io/learnpg/2/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mjczz.github.io/learnpg/2/</guid>
      <description>数据库索引建立常用规则 1. 表的主键、外键一般要建索引（pgsql会自动为主键建立索引） 2. 经常与其他表连接的表，在连接字段上建立索引 3. 索引应该建</description>
    </item>
    
  </channel>
</rss>